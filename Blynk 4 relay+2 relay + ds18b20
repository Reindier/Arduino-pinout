#define BLYNK_PRINT Serial    
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <TimeLib.h>
#include <SimpleTimer.h>
#include <OneWire.h>
#include <DallasTemperature.h>

#define LED D4                               //Bulletin LED

int IN1 = D8; //in1 on 2 relay module
int IN2 = D7; //in2 on 2 relay module
int IN3 = D2; //in1 on 4 relay module
int IN4 = D3; //in2 on 4 relay module
int IN5 = D5; //in3 on 4 relay module
int IN6 = D6; //in4 on 4 relay module

#define ON   0
#define OFF  1
volatile byte relayState = LOW; //relay state

// You should get Auth Token in the Blynk App.
// Go to the Project Settings (nut icon).
char auth[] = "7fbac105c665666566639d699";

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "ziggo-ap6565707";
char pass[] = "28,656^S[7ZJP";
 
// Data wire is plugged into pin D2 on the Arduino
#define ONE_WIRE_BUS D1
 
// Setup a oneWire instance to communicate with any OneWire devices
OneWire oneWire(ONE_WIRE_BUS);
 
// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);
 
// Assign the unique addresses of your 1-Wire temp sensors.
// See the tutorial on how to obtain these addresses:
// http://www.hacktronics.com/Tutorials/arduino-1-wire-address-finder.html
 
DeviceAddress insideThermometer = { 0x28, 0xFF, 0x99, 0x2B, 0xB1, 0x17, 0x05, 0x42 };
 
void setup(void) {
  // start serial port
  Serial.begin(9600);

   Blynk.begin(auth, ssid, pass, IPAddress(192,168,178,33), 8080);

  // Start up the library
  sensors.begin();
  // set the resolution to 12 bit (if needed)
  //sensors.setResolution(insideThermometer, 12);
  //sensors.setResolution(outsideThermometer, 12);
}
 
void loop(void) { 
  Blynk.run();
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);
  pinMode(IN5, OUTPUT);
  pinMode(IN6, OUTPUT);
  Serial.print("Getting temperatures...\n\r");
  sensors.requestTemperatures();
  
  Serial.print("Inside temperature is: ");
  printTemperature(insideThermometer);
  Serial.print("\n\r");
  }


void printTemperature(DeviceAddress deviceAddress) {
  float tempC = sensors.getTempC(deviceAddress);
  if (tempC == -127.00) {
    Serial.print("Error getting temperature");
  } else {
    Serial.print("C: ");
    Serial.print(tempC);
    Blynk.virtualWrite(4,tempC);
    Serial.print(" F: ");
    Serial.print(DallasTemperature::toFahrenheit(tempC));
  }

 }
BLYNK_WRITE(V1)
{
if(IN1==HIGH)
  {
     Blynk.virtualWrite(V1, HIGH);
  }
  else
  {
     Blynk.virtualWrite(V1, LOW);
  }
}
BLYNK_WRITE(V2)
{
if(IN2==0)
  {
     Blynk.virtualWrite(V2, 0);
  }
  else
  {
     Blynk.virtualWrite(V2, 1);
  }
}



